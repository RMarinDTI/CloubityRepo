/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.davinciti.liferay.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ConnectionData service. Represents a row in the &quot;CMES_ConnectionData&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link es.davinciti.liferay.model.impl.ConnectionDataModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link es.davinciti.liferay.model.impl.ConnectionDataImpl}.
 * </p>
 *
 * @author Cmes
 * @see ConnectionData
 * @see es.davinciti.liferay.model.impl.ConnectionDataImpl
 * @see es.davinciti.liferay.model.impl.ConnectionDataModelImpl
 * @generated
 */
public interface ConnectionDataModel extends BaseModel<ConnectionData> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a connection data model instance should use the {@link ConnectionData} interface instead.
	 */

	/**
	 * Returns the primary key of this connection data.
	 *
	 * @return the primary key of this connection data
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this connection data.
	 *
	 * @param primaryKey the primary key of this connection data
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the connection data ID of this connection data.
	 *
	 * @return the connection data ID of this connection data
	 */
	public long getConnectionDataId();

	/**
	 * Sets the connection data ID of this connection data.
	 *
	 * @param connectionDataId the connection data ID of this connection data
	 */
	public void setConnectionDataId(long connectionDataId);

	/**
	 * Returns the company d b of this connection data.
	 *
	 * @return the company d b of this connection data
	 */
	@AutoEscape
	public String getCompanyDB();

	/**
	 * Sets the company d b of this connection data.
	 *
	 * @param companyDB the company d b of this connection data
	 */
	public void setCompanyDB(String companyDB);

	/**
	 * Returns the username of this connection data.
	 *
	 * @return the username of this connection data
	 */
	@AutoEscape
	public String getUsername();

	/**
	 * Sets the username of this connection data.
	 *
	 * @param username the username of this connection data
	 */
	public void setUsername(String username);

	/**
	 * Returns the password of this connection data.
	 *
	 * @return the password of this connection data
	 */
	@AutoEscape
	public String getPassword();

	/**
	 * Sets the password of this connection data.
	 *
	 * @param password the password of this connection data
	 */
	public void setPassword(String password);

	/**
	 * Returns the url of this connection data.
	 *
	 * @return the url of this connection data
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this connection data.
	 *
	 * @param url the url of this connection data
	 */
	public void setUrl(String url);

	/**
	 * Returns the server of this connection data.
	 *
	 * @return the server of this connection data
	 */
	@AutoEscape
	public String getServer();

	/**
	 * Sets the server of this connection data.
	 *
	 * @param server the server of this connection data
	 */
	public void setServer(String server);

	/**
	 * Returns the port of this connection data.
	 *
	 * @return the port of this connection data
	 */
	@AutoEscape
	public String getPort();

	/**
	 * Sets the port of this connection data.
	 *
	 * @param port the port of this connection data
	 */
	public void setPort(String port);

	/**
	 * Returns the access token of this connection data.
	 *
	 * @return the access token of this connection data
	 */
	@AutoEscape
	public String getAccessToken();

	/**
	 * Sets the access token of this connection data.
	 *
	 * @param accessToken the access token of this connection data
	 */
	public void setAccessToken(String accessToken);

	/**
	 * Returns the refresh token of this connection data.
	 *
	 * @return the refresh token of this connection data
	 */
	@AutoEscape
	public String getRefreshToken();

	/**
	 * Sets the refresh token of this connection data.
	 *
	 * @param refreshToken the refresh token of this connection data
	 */
	public void setRefreshToken(String refreshToken);

	/**
	 * Returns the disable date of this connection data.
	 *
	 * @return the disable date of this connection data
	 */
	public Date getDisableDate();

	/**
	 * Sets the disable date of this connection data.
	 *
	 * @param disableDate the disable date of this connection data
	 */
	public void setDisableDate(Date disableDate);

	/**
	 * Returns the secret key of this connection data.
	 *
	 * @return the secret key of this connection data
	 */
	@AutoEscape
	public String getSecretKey();

	/**
	 * Sets the secret key of this connection data.
	 *
	 * @param secretKey the secret key of this connection data
	 */
	public void setSecretKey(String secretKey);

	/**
	 * Returns the application token of this connection data.
	 *
	 * @return the application token of this connection data
	 */
	@AutoEscape
	public String getApplicationToken();

	/**
	 * Sets the application token of this connection data.
	 *
	 * @param applicationToken the application token of this connection data
	 */
	public void setApplicationToken(String applicationToken);

	/**
	 * Returns the client ID of this connection data.
	 *
	 * @return the client ID of this connection data
	 */
	@AutoEscape
	public String getClientId();

	/**
	 * Sets the client ID of this connection data.
	 *
	 * @param clientId the client ID of this connection data
	 */
	public void setClientId(String clientId);

	/**
	 * Returns the token type of this connection data.
	 *
	 * @return the token type of this connection data
	 */
	@AutoEscape
	public String getTokenType();

	/**
	 * Sets the token type of this connection data.
	 *
	 * @param tokenType the token type of this connection data
	 */
	public void setTokenType(String tokenType);

	/**
	 * Returns the expires in of this connection data.
	 *
	 * @return the expires in of this connection data
	 */
	public int getExpiresIn();

	/**
	 * Sets the expires in of this connection data.
	 *
	 * @param expiresIn the expires in of this connection data
	 */
	public void setExpiresIn(int expiresIn);

	/**
	 * Returns the scope of this connection data.
	 *
	 * @return the scope of this connection data
	 */
	@AutoEscape
	public String getScope();

	/**
	 * Sets the scope of this connection data.
	 *
	 * @param scope the scope of this connection data
	 */
	public void setScope(String scope);

	/**
	 * Returns the clave primaria of this connection data.
	 *
	 * @return the clave primaria of this connection data
	 */
	@AutoEscape
	public String getClavePrimaria();

	/**
	 * Sets the clave primaria of this connection data.
	 *
	 * @param clavePrimaria the clave primaria of this connection data
	 */
	public void setClavePrimaria(String clavePrimaria);

	/**
	 * Returns the clave secundaria of this connection data.
	 *
	 * @return the clave secundaria of this connection data
	 */
	@AutoEscape
	public String getClaveSecundaria();

	/**
	 * Sets the clave secundaria of this connection data.
	 *
	 * @param claveSecundaria the clave secundaria of this connection data
	 */
	public void setClaveSecundaria(String claveSecundaria);

	/**
	 * Returns the session ID of this connection data.
	 *
	 * @return the session ID of this connection data
	 */
	@AutoEscape
	public String getSessionId();

	/**
	 * Sets the session ID of this connection data.
	 *
	 * @param sessionId the session ID of this connection data
	 */
	public void setSessionId(String sessionId);

	/**
	 * Returns the encoded client credentials of this connection data.
	 *
	 * @return the encoded client credentials of this connection data
	 */
	@AutoEscape
	public String getEncodedClientCredentials();

	/**
	 * Sets the encoded client credentials of this connection data.
	 *
	 * @param encodedClientCredentials the encoded client credentials of this connection data
	 */
	public void setEncodedClientCredentials(String encodedClientCredentials);

	/**
	 * Returns the state of this connection data.
	 *
	 * @return the state of this connection data
	 */
	@AutoEscape
	public String getState();

	/**
	 * Sets the state of this connection data.
	 *
	 * @param state the state of this connection data
	 */
	public void setState(String state);

	/**
	 * Returns the web secret key of this connection data.
	 *
	 * @return the web secret key of this connection data
	 */
	@AutoEscape
	public String getWebSecretKey();

	/**
	 * Sets the web secret key of this connection data.
	 *
	 * @param webSecretKey the web secret key of this connection data
	 */
	public void setWebSecretKey(String webSecretKey);

	/**
	 * Returns the application code of this connection data.
	 *
	 * @return the application code of this connection data
	 */
	@AutoEscape
	public String getApplicationCode();

	/**
	 * Sets the application code of this connection data.
	 *
	 * @param applicationCode the application code of this connection data
	 */
	public void setApplicationCode(String applicationCode);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		es.davinciti.liferay.model.ConnectionData connectionData);

	@Override
	public int hashCode();

	@Override
	public CacheModel<es.davinciti.liferay.model.ConnectionData> toCacheModel();

	@Override
	public es.davinciti.liferay.model.ConnectionData toEscapedModel();

	@Override
	public es.davinciti.liferay.model.ConnectionData toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}