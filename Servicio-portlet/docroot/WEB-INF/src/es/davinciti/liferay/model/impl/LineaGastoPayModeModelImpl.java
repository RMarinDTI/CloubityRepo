/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.davinciti.liferay.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import es.davinciti.liferay.model.LineaGastoPayMode;
import es.davinciti.liferay.model.LineaGastoPayModeModel;
import es.davinciti.liferay.model.LineaGastoPayModeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LineaGastoPayMode service. Represents a row in the &quot;CMES_LineaGastoPayMode&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link es.davinciti.liferay.model.LineaGastoPayModeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LineaGastoPayModeImpl}.
 * </p>
 *
 * @author Cmes
 * @see LineaGastoPayModeImpl
 * @see es.davinciti.liferay.model.LineaGastoPayMode
 * @see es.davinciti.liferay.model.LineaGastoPayModeModel
 * @generated
 */
@JSON(strict = true)
public class LineaGastoPayModeModelImpl extends BaseModelImpl<LineaGastoPayMode>
	implements LineaGastoPayModeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a linea gasto pay mode model instance should use the {@link es.davinciti.liferay.model.LineaGastoPayMode} interface instead.
	 */
	public static final String TABLE_NAME = "CMES_LineaGastoPayMode";
	public static final Object[][] TABLE_COLUMNS = {
			{ "paymodeId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table CMES_LineaGastoPayMode (paymodeId LONG not null primary key,companyId LONG,name VARCHAR(75) null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CMES_LineaGastoPayMode";
	public static final String ORDER_BY_JPQL = " ORDER BY lineaGastoPayMode.paymodeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CMES_LineaGastoPayMode.paymodeId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.es.davinciti.liferay.model.LineaGastoPayMode"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.es.davinciti.liferay.model.LineaGastoPayMode"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.es.davinciti.liferay.model.LineaGastoPayMode"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long PAYMODEID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LineaGastoPayMode toModel(LineaGastoPayModeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LineaGastoPayMode model = new LineaGastoPayModeImpl();

		model.setPaymodeId(soapModel.getPaymodeId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LineaGastoPayMode> toModels(
		LineaGastoPayModeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LineaGastoPayMode> models = new ArrayList<LineaGastoPayMode>(soapModels.length);

		for (LineaGastoPayModeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_CMES_LINEAS_PAYMODES_NAME = "CMES_Lineas_PayModes";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_PAYMODES_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "paymodeId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_PAYMODES_SQL_CREATE = "create table CMES_Lineas_PayModes (lineagastoId LONG not null,paymodeId LONG not null,primary key (lineagastoId, paymodeId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_PAYMODES = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_PayModes"), true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.es.davinciti.liferay.model.LineaGastoPayMode"));

	public LineaGastoPayModeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _paymodeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPaymodeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _paymodeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LineaGastoPayMode.class;
	}

	@Override
	public String getModelClassName() {
		return LineaGastoPayMode.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("paymodeId", getPaymodeId());
		attributes.put("companyId", getCompanyId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long paymodeId = (Long)attributes.get("paymodeId");

		if (paymodeId != null) {
			setPaymodeId(paymodeId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@JSON
	@Override
	public long getPaymodeId() {
		return _paymodeId;
	}

	@Override
	public void setPaymodeId(long paymodeId) {
		_paymodeId = paymodeId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			LineaGastoPayMode.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LineaGastoPayMode toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LineaGastoPayMode)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LineaGastoPayModeImpl lineaGastoPayModeImpl = new LineaGastoPayModeImpl();

		lineaGastoPayModeImpl.setPaymodeId(getPaymodeId());
		lineaGastoPayModeImpl.setCompanyId(getCompanyId());
		lineaGastoPayModeImpl.setName(getName());
		lineaGastoPayModeImpl.setDescription(getDescription());

		lineaGastoPayModeImpl.resetOriginalValues();

		return lineaGastoPayModeImpl;
	}

	@Override
	public int compareTo(LineaGastoPayMode lineaGastoPayMode) {
		long primaryKey = lineaGastoPayMode.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LineaGastoPayMode)) {
			return false;
		}

		LineaGastoPayMode lineaGastoPayMode = (LineaGastoPayMode)obj;

		long primaryKey = lineaGastoPayMode.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LineaGastoPayModeModelImpl lineaGastoPayModeModelImpl = this;

		lineaGastoPayModeModelImpl._originalCompanyId = lineaGastoPayModeModelImpl._companyId;

		lineaGastoPayModeModelImpl._setOriginalCompanyId = false;

		lineaGastoPayModeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LineaGastoPayMode> toCacheModel() {
		LineaGastoPayModeCacheModel lineaGastoPayModeCacheModel = new LineaGastoPayModeCacheModel();

		lineaGastoPayModeCacheModel.paymodeId = getPaymodeId();

		lineaGastoPayModeCacheModel.companyId = getCompanyId();

		lineaGastoPayModeCacheModel.name = getName();

		String name = lineaGastoPayModeCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			lineaGastoPayModeCacheModel.name = null;
		}

		lineaGastoPayModeCacheModel.description = getDescription();

		String description = lineaGastoPayModeCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			lineaGastoPayModeCacheModel.description = null;
		}

		return lineaGastoPayModeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{paymodeId=");
		sb.append(getPaymodeId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("es.davinciti.liferay.model.LineaGastoPayMode");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>paymodeId</column-name><column-value><![CDATA[");
		sb.append(getPaymodeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LineaGastoPayMode.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LineaGastoPayMode.class
		};
	private long _paymodeId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private String _name;
	private String _description;
	private long _columnBitmask;
	private LineaGastoPayMode _escapedModel;
}