/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.davinciti.liferay.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import es.davinciti.liferay.model.LineaGastoProyecto;
import es.davinciti.liferay.model.LineaGastoProyectoModel;
import es.davinciti.liferay.model.LineaGastoProyectoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LineaGastoProyecto service. Represents a row in the &quot;CMES_LineaGastoProyecto&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link es.davinciti.liferay.model.LineaGastoProyectoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LineaGastoProyectoImpl}.
 * </p>
 *
 * @author Cmes
 * @see LineaGastoProyectoImpl
 * @see es.davinciti.liferay.model.LineaGastoProyecto
 * @see es.davinciti.liferay.model.LineaGastoProyectoModel
 * @generated
 */
@JSON(strict = true)
public class LineaGastoProyectoModelImpl extends BaseModelImpl<LineaGastoProyecto>
	implements LineaGastoProyectoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a linea gasto proyecto model instance should use the {@link es.davinciti.liferay.model.LineaGastoProyecto} interface instead.
	 */
	public static final String TABLE_NAME = "CMES_LineaGastoProyecto";
	public static final Object[][] TABLE_COLUMNS = {
			{ "proyectoId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "codeName", Types.VARCHAR },
			{ "sageCompanyId", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table CMES_LineaGastoProyecto (proyectoId LONG not null primary key,name VARCHAR(75) null,description VARCHAR(75) null,codeName VARCHAR(75) null,sageCompanyId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CMES_LineaGastoProyecto";
	public static final String ORDER_BY_JPQL = " ORDER BY lineaGastoProyecto.proyectoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CMES_LineaGastoProyecto.proyectoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.es.davinciti.liferay.model.LineaGastoProyecto"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.es.davinciti.liferay.model.LineaGastoProyecto"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LineaGastoProyecto toModel(LineaGastoProyectoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LineaGastoProyecto model = new LineaGastoProyectoImpl();

		model.setProyectoId(soapModel.getProyectoId());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());
		model.setCodeName(soapModel.getCodeName());
		model.setSageCompanyId(soapModel.getSageCompanyId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LineaGastoProyecto> toModels(
		LineaGastoProyectoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LineaGastoProyecto> models = new ArrayList<LineaGastoProyecto>(soapModels.length);

		for (LineaGastoProyectoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_CMES_CLIENTES_PROYECTOS_NAME = "CMES_Clientes_Proyectos";
	public static final Object[][] MAPPING_TABLE_CMES_CLIENTES_PROYECTOS_COLUMNS =
		{
			{ "clienteId", Types.BIGINT },
			{ "proyectoId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_CLIENTES_PROYECTOS_SQL_CREATE = "create table CMES_Clientes_Proyectos (clienteId LONG not null,proyectoId LONG not null,primary key (clienteId, proyectoId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_CLIENTES_PROYECTOS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Clientes_Proyectos"),
			true);
	public static final String MAPPING_TABLE_CMES_LINEAS_PROYECTOS_NAME = "CMES_Lineas_Proyectos";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_PROYECTOS_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "proyectoId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_PROYECTOS_SQL_CREATE = "create table CMES_Lineas_Proyectos (lineagastoId LONG not null,proyectoId LONG not null,primary key (lineagastoId, proyectoId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_PROYECTOS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_Proyectos"), true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.es.davinciti.liferay.model.LineaGastoProyecto"));

	public LineaGastoProyectoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _proyectoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProyectoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _proyectoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LineaGastoProyecto.class;
	}

	@Override
	public String getModelClassName() {
		return LineaGastoProyecto.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("proyectoId", getProyectoId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("codeName", getCodeName());
		attributes.put("sageCompanyId", getSageCompanyId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long proyectoId = (Long)attributes.get("proyectoId");

		if (proyectoId != null) {
			setProyectoId(proyectoId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String codeName = (String)attributes.get("codeName");

		if (codeName != null) {
			setCodeName(codeName);
		}

		String sageCompanyId = (String)attributes.get("sageCompanyId");

		if (sageCompanyId != null) {
			setSageCompanyId(sageCompanyId);
		}
	}

	@JSON
	@Override
	public long getProyectoId() {
		return _proyectoId;
	}

	@Override
	public void setProyectoId(long proyectoId) {
		_proyectoId = proyectoId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getCodeName() {
		if (_codeName == null) {
			return StringPool.BLANK;
		}
		else {
			return _codeName;
		}
	}

	@Override
	public void setCodeName(String codeName) {
		_codeName = codeName;
	}

	@JSON
	@Override
	public String getSageCompanyId() {
		if (_sageCompanyId == null) {
			return StringPool.BLANK;
		}
		else {
			return _sageCompanyId;
		}
	}

	@Override
	public void setSageCompanyId(String sageCompanyId) {
		_sageCompanyId = sageCompanyId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LineaGastoProyecto.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LineaGastoProyecto toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LineaGastoProyecto)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LineaGastoProyectoImpl lineaGastoProyectoImpl = new LineaGastoProyectoImpl();

		lineaGastoProyectoImpl.setProyectoId(getProyectoId());
		lineaGastoProyectoImpl.setName(getName());
		lineaGastoProyectoImpl.setDescription(getDescription());
		lineaGastoProyectoImpl.setCodeName(getCodeName());
		lineaGastoProyectoImpl.setSageCompanyId(getSageCompanyId());

		lineaGastoProyectoImpl.resetOriginalValues();

		return lineaGastoProyectoImpl;
	}

	@Override
	public int compareTo(LineaGastoProyecto lineaGastoProyecto) {
		long primaryKey = lineaGastoProyecto.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LineaGastoProyecto)) {
			return false;
		}

		LineaGastoProyecto lineaGastoProyecto = (LineaGastoProyecto)obj;

		long primaryKey = lineaGastoProyecto.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LineaGastoProyecto> toCacheModel() {
		LineaGastoProyectoCacheModel lineaGastoProyectoCacheModel = new LineaGastoProyectoCacheModel();

		lineaGastoProyectoCacheModel.proyectoId = getProyectoId();

		lineaGastoProyectoCacheModel.name = getName();

		String name = lineaGastoProyectoCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			lineaGastoProyectoCacheModel.name = null;
		}

		lineaGastoProyectoCacheModel.description = getDescription();

		String description = lineaGastoProyectoCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			lineaGastoProyectoCacheModel.description = null;
		}

		lineaGastoProyectoCacheModel.codeName = getCodeName();

		String codeName = lineaGastoProyectoCacheModel.codeName;

		if ((codeName != null) && (codeName.length() == 0)) {
			lineaGastoProyectoCacheModel.codeName = null;
		}

		lineaGastoProyectoCacheModel.sageCompanyId = getSageCompanyId();

		String sageCompanyId = lineaGastoProyectoCacheModel.sageCompanyId;

		if ((sageCompanyId != null) && (sageCompanyId.length() == 0)) {
			lineaGastoProyectoCacheModel.sageCompanyId = null;
		}

		return lineaGastoProyectoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{proyectoId=");
		sb.append(getProyectoId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", codeName=");
		sb.append(getCodeName());
		sb.append(", sageCompanyId=");
		sb.append(getSageCompanyId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("es.davinciti.liferay.model.LineaGastoProyecto");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>proyectoId</column-name><column-value><![CDATA[");
		sb.append(getProyectoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codeName</column-name><column-value><![CDATA[");
		sb.append(getCodeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sageCompanyId</column-name><column-value><![CDATA[");
		sb.append(getSageCompanyId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LineaGastoProyecto.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LineaGastoProyecto.class
		};
	private long _proyectoId;
	private String _name;
	private String _description;
	private String _codeName;
	private String _sageCompanyId;
	private LineaGastoProyecto _escapedModel;
}