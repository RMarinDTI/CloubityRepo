/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.davinciti.liferay.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import es.davinciti.liferay.model.LineaGastoCategoria;
import es.davinciti.liferay.model.LineaGastoCategoriaModel;
import es.davinciti.liferay.model.LineaGastoCategoriaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LineaGastoCategoria service. Represents a row in the &quot;CMES_LineaGastoCategoria&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link es.davinciti.liferay.model.LineaGastoCategoriaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LineaGastoCategoriaImpl}.
 * </p>
 *
 * @author Cmes
 * @see LineaGastoCategoriaImpl
 * @see es.davinciti.liferay.model.LineaGastoCategoria
 * @see es.davinciti.liferay.model.LineaGastoCategoriaModel
 * @generated
 */
@JSON(strict = true)
public class LineaGastoCategoriaModelImpl extends BaseModelImpl<LineaGastoCategoria>
	implements LineaGastoCategoriaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a linea gasto categoria model instance should use the {@link es.davinciti.liferay.model.LineaGastoCategoria} interface instead.
	 */
	public static final String TABLE_NAME = "CMES_LineaGastoCategoria";
	public static final Object[][] TABLE_COLUMNS = {
			{ "categoriaId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "categoryCode", Types.VARCHAR },
			{ "accountCode", Types.VARCHAR },
			{ "changePrice", Types.VARCHAR },
			{ "needQuantity", Types.VARCHAR },
			{ "price", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table CMES_LineaGastoCategoria (categoriaId LONG not null primary key,name VARCHAR(75) null,description VARCHAR(75) null,categoryCode VARCHAR(75) null,accountCode VARCHAR(75) null,changePrice VARCHAR(75) null,needQuantity VARCHAR(75) null,price VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CMES_LineaGastoCategoria";
	public static final String ORDER_BY_JPQL = " ORDER BY lineaGastoCategoria.categoriaId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CMES_LineaGastoCategoria.categoriaId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.es.davinciti.liferay.model.LineaGastoCategoria"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.es.davinciti.liferay.model.LineaGastoCategoria"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LineaGastoCategoria toModel(LineaGastoCategoriaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LineaGastoCategoria model = new LineaGastoCategoriaImpl();

		model.setCategoriaId(soapModel.getCategoriaId());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());
		model.setCategoryCode(soapModel.getCategoryCode());
		model.setAccountCode(soapModel.getAccountCode());
		model.setChangePrice(soapModel.getChangePrice());
		model.setNeedQuantity(soapModel.getNeedQuantity());
		model.setPrice(soapModel.getPrice());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LineaGastoCategoria> toModels(
		LineaGastoCategoriaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LineaGastoCategoria> models = new ArrayList<LineaGastoCategoria>(soapModels.length);

		for (LineaGastoCategoriaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_CMES_FAMILIAS_CATEGORIAS_NAME = "CMES_Familias_Categorias";
	public static final Object[][] MAPPING_TABLE_CMES_FAMILIAS_CATEGORIAS_COLUMNS =
		{
			{ "categoriaId", Types.BIGINT },
			{ "familiaId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_FAMILIAS_CATEGORIAS_SQL_CREATE =
		"create table CMES_Familias_Categorias (categoriaId LONG not null,familiaId LONG not null,primary key (categoriaId, familiaId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_FAMILIAS_CATEGORIAS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Familias_Categorias"),
			true);
	public static final String MAPPING_TABLE_CMES_LINEAS_CATEGORIAS_NAME = "CMES_Lineas_Categorias";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_CATEGORIAS_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "categoriaId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_CATEGORIAS_SQL_CREATE = "create table CMES_Lineas_Categorias (lineagastoId LONG not null,categoriaId LONG not null,primary key (lineagastoId, categoriaId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_CATEGORIAS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_Categorias"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.es.davinciti.liferay.model.LineaGastoCategoria"));

	public LineaGastoCategoriaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _categoriaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCategoriaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _categoriaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LineaGastoCategoria.class;
	}

	@Override
	public String getModelClassName() {
		return LineaGastoCategoria.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("categoriaId", getCategoriaId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("categoryCode", getCategoryCode());
		attributes.put("accountCode", getAccountCode());
		attributes.put("changePrice", getChangePrice());
		attributes.put("needQuantity", getNeedQuantity());
		attributes.put("price", getPrice());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long categoriaId = (Long)attributes.get("categoriaId");

		if (categoriaId != null) {
			setCategoriaId(categoriaId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String categoryCode = (String)attributes.get("categoryCode");

		if (categoryCode != null) {
			setCategoryCode(categoryCode);
		}

		String accountCode = (String)attributes.get("accountCode");

		if (accountCode != null) {
			setAccountCode(accountCode);
		}

		String changePrice = (String)attributes.get("changePrice");

		if (changePrice != null) {
			setChangePrice(changePrice);
		}

		String needQuantity = (String)attributes.get("needQuantity");

		if (needQuantity != null) {
			setNeedQuantity(needQuantity);
		}

		String price = (String)attributes.get("price");

		if (price != null) {
			setPrice(price);
		}
	}

	@JSON
	@Override
	public long getCategoriaId() {
		return _categoriaId;
	}

	@Override
	public void setCategoriaId(long categoriaId) {
		_categoriaId = categoriaId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getCategoryCode() {
		if (_categoryCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _categoryCode;
		}
	}

	@Override
	public void setCategoryCode(String categoryCode) {
		_categoryCode = categoryCode;
	}

	@JSON
	@Override
	public String getAccountCode() {
		if (_accountCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountCode;
		}
	}

	@Override
	public void setAccountCode(String accountCode) {
		_accountCode = accountCode;
	}

	@JSON
	@Override
	public String getChangePrice() {
		if (_changePrice == null) {
			return StringPool.BLANK;
		}
		else {
			return _changePrice;
		}
	}

	@Override
	public void setChangePrice(String changePrice) {
		_changePrice = changePrice;
	}

	@JSON
	@Override
	public String getNeedQuantity() {
		if (_needQuantity == null) {
			return StringPool.BLANK;
		}
		else {
			return _needQuantity;
		}
	}

	@Override
	public void setNeedQuantity(String needQuantity) {
		_needQuantity = needQuantity;
	}

	@JSON
	@Override
	public String getPrice() {
		if (_price == null) {
			return StringPool.BLANK;
		}
		else {
			return _price;
		}
	}

	@Override
	public void setPrice(String price) {
		_price = price;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LineaGastoCategoria.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LineaGastoCategoria toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LineaGastoCategoria)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LineaGastoCategoriaImpl lineaGastoCategoriaImpl = new LineaGastoCategoriaImpl();

		lineaGastoCategoriaImpl.setCategoriaId(getCategoriaId());
		lineaGastoCategoriaImpl.setName(getName());
		lineaGastoCategoriaImpl.setDescription(getDescription());
		lineaGastoCategoriaImpl.setCategoryCode(getCategoryCode());
		lineaGastoCategoriaImpl.setAccountCode(getAccountCode());
		lineaGastoCategoriaImpl.setChangePrice(getChangePrice());
		lineaGastoCategoriaImpl.setNeedQuantity(getNeedQuantity());
		lineaGastoCategoriaImpl.setPrice(getPrice());

		lineaGastoCategoriaImpl.resetOriginalValues();

		return lineaGastoCategoriaImpl;
	}

	@Override
	public int compareTo(LineaGastoCategoria lineaGastoCategoria) {
		long primaryKey = lineaGastoCategoria.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LineaGastoCategoria)) {
			return false;
		}

		LineaGastoCategoria lineaGastoCategoria = (LineaGastoCategoria)obj;

		long primaryKey = lineaGastoCategoria.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LineaGastoCategoria> toCacheModel() {
		LineaGastoCategoriaCacheModel lineaGastoCategoriaCacheModel = new LineaGastoCategoriaCacheModel();

		lineaGastoCategoriaCacheModel.categoriaId = getCategoriaId();

		lineaGastoCategoriaCacheModel.name = getName();

		String name = lineaGastoCategoriaCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			lineaGastoCategoriaCacheModel.name = null;
		}

		lineaGastoCategoriaCacheModel.description = getDescription();

		String description = lineaGastoCategoriaCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			lineaGastoCategoriaCacheModel.description = null;
		}

		lineaGastoCategoriaCacheModel.categoryCode = getCategoryCode();

		String categoryCode = lineaGastoCategoriaCacheModel.categoryCode;

		if ((categoryCode != null) && (categoryCode.length() == 0)) {
			lineaGastoCategoriaCacheModel.categoryCode = null;
		}

		lineaGastoCategoriaCacheModel.accountCode = getAccountCode();

		String accountCode = lineaGastoCategoriaCacheModel.accountCode;

		if ((accountCode != null) && (accountCode.length() == 0)) {
			lineaGastoCategoriaCacheModel.accountCode = null;
		}

		lineaGastoCategoriaCacheModel.changePrice = getChangePrice();

		String changePrice = lineaGastoCategoriaCacheModel.changePrice;

		if ((changePrice != null) && (changePrice.length() == 0)) {
			lineaGastoCategoriaCacheModel.changePrice = null;
		}

		lineaGastoCategoriaCacheModel.needQuantity = getNeedQuantity();

		String needQuantity = lineaGastoCategoriaCacheModel.needQuantity;

		if ((needQuantity != null) && (needQuantity.length() == 0)) {
			lineaGastoCategoriaCacheModel.needQuantity = null;
		}

		lineaGastoCategoriaCacheModel.price = getPrice();

		String price = lineaGastoCategoriaCacheModel.price;

		if ((price != null) && (price.length() == 0)) {
			lineaGastoCategoriaCacheModel.price = null;
		}

		return lineaGastoCategoriaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{categoriaId=");
		sb.append(getCategoriaId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", categoryCode=");
		sb.append(getCategoryCode());
		sb.append(", accountCode=");
		sb.append(getAccountCode());
		sb.append(", changePrice=");
		sb.append(getChangePrice());
		sb.append(", needQuantity=");
		sb.append(getNeedQuantity());
		sb.append(", price=");
		sb.append(getPrice());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("es.davinciti.liferay.model.LineaGastoCategoria");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>categoriaId</column-name><column-value><![CDATA[");
		sb.append(getCategoriaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryCode</column-name><column-value><![CDATA[");
		sb.append(getCategoryCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountCode</column-name><column-value><![CDATA[");
		sb.append(getAccountCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>changePrice</column-name><column-value><![CDATA[");
		sb.append(getChangePrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>needQuantity</column-name><column-value><![CDATA[");
		sb.append(getNeedQuantity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>price</column-name><column-value><![CDATA[");
		sb.append(getPrice());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LineaGastoCategoria.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LineaGastoCategoria.class
		};
	private long _categoriaId;
	private String _name;
	private String _description;
	private String _categoryCode;
	private String _accountCode;
	private String _changePrice;
	private String _needQuantity;
	private String _price;
	private LineaGastoCategoria _escapedModel;
}