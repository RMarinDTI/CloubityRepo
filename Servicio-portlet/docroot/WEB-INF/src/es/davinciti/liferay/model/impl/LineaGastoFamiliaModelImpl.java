/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.davinciti.liferay.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import es.davinciti.liferay.model.LineaGastoFamilia;
import es.davinciti.liferay.model.LineaGastoFamiliaModel;
import es.davinciti.liferay.model.LineaGastoFamiliaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LineaGastoFamilia service. Represents a row in the &quot;CMES_LineaGastoFamilia&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link es.davinciti.liferay.model.LineaGastoFamiliaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LineaGastoFamiliaImpl}.
 * </p>
 *
 * @author Cmes
 * @see LineaGastoFamiliaImpl
 * @see es.davinciti.liferay.model.LineaGastoFamilia
 * @see es.davinciti.liferay.model.LineaGastoFamiliaModel
 * @generated
 */
@JSON(strict = true)
public class LineaGastoFamiliaModelImpl extends BaseModelImpl<LineaGastoFamilia>
	implements LineaGastoFamiliaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a linea gasto familia model instance should use the {@link es.davinciti.liferay.model.LineaGastoFamilia} interface instead.
	 */
	public static final String TABLE_NAME = "CMES_LineaGastoFamilia";
	public static final Object[][] TABLE_COLUMNS = {
			{ "familiaId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table CMES_LineaGastoFamilia (familiaId LONG not null primary key,companyId LONG,name VARCHAR(75) null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CMES_LineaGastoFamilia";
	public static final String ORDER_BY_JPQL = " ORDER BY lineaGastoFamilia.familiaId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CMES_LineaGastoFamilia.familiaId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.es.davinciti.liferay.model.LineaGastoFamilia"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.es.davinciti.liferay.model.LineaGastoFamilia"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.es.davinciti.liferay.model.LineaGastoFamilia"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long FAMILIAID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LineaGastoFamilia toModel(LineaGastoFamiliaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LineaGastoFamilia model = new LineaGastoFamiliaImpl();

		model.setFamiliaId(soapModel.getFamiliaId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LineaGastoFamilia> toModels(
		LineaGastoFamiliaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LineaGastoFamilia> models = new ArrayList<LineaGastoFamilia>(soapModels.length);

		for (LineaGastoFamiliaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_CMES_LINEAS_FAMILIAS_NAME = "CMES_Lineas_Familias";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_FAMILIAS_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "familiaId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_FAMILIAS_SQL_CREATE = "create table CMES_Lineas_Familias (lineagastoId LONG not null,familiaId LONG not null,primary key (lineagastoId, familiaId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_FAMILIAS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_Familias"), true);
	public static final String MAPPING_TABLE_CMES_FAMILIAS_CATEGORIAS_NAME = "CMES_Familias_Categorias";
	public static final Object[][] MAPPING_TABLE_CMES_FAMILIAS_CATEGORIAS_COLUMNS =
		{
			{ "categoriaId", Types.BIGINT },
			{ "familiaId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_FAMILIAS_CATEGORIAS_SQL_CREATE =
		"create table CMES_Familias_Categorias (categoriaId LONG not null,familiaId LONG not null,primary key (categoriaId, familiaId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_FAMILIAS_CATEGORIAS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Familias_Categorias"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.es.davinciti.liferay.model.LineaGastoFamilia"));

	public LineaGastoFamiliaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _familiaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFamiliaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _familiaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LineaGastoFamilia.class;
	}

	@Override
	public String getModelClassName() {
		return LineaGastoFamilia.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("familiaId", getFamiliaId());
		attributes.put("companyId", getCompanyId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long familiaId = (Long)attributes.get("familiaId");

		if (familiaId != null) {
			setFamiliaId(familiaId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@JSON
	@Override
	public long getFamiliaId() {
		return _familiaId;
	}

	@Override
	public void setFamiliaId(long familiaId) {
		_familiaId = familiaId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			LineaGastoFamilia.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LineaGastoFamilia toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LineaGastoFamilia)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LineaGastoFamiliaImpl lineaGastoFamiliaImpl = new LineaGastoFamiliaImpl();

		lineaGastoFamiliaImpl.setFamiliaId(getFamiliaId());
		lineaGastoFamiliaImpl.setCompanyId(getCompanyId());
		lineaGastoFamiliaImpl.setName(getName());
		lineaGastoFamiliaImpl.setDescription(getDescription());

		lineaGastoFamiliaImpl.resetOriginalValues();

		return lineaGastoFamiliaImpl;
	}

	@Override
	public int compareTo(LineaGastoFamilia lineaGastoFamilia) {
		long primaryKey = lineaGastoFamilia.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LineaGastoFamilia)) {
			return false;
		}

		LineaGastoFamilia lineaGastoFamilia = (LineaGastoFamilia)obj;

		long primaryKey = lineaGastoFamilia.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LineaGastoFamiliaModelImpl lineaGastoFamiliaModelImpl = this;

		lineaGastoFamiliaModelImpl._originalCompanyId = lineaGastoFamiliaModelImpl._companyId;

		lineaGastoFamiliaModelImpl._setOriginalCompanyId = false;

		lineaGastoFamiliaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LineaGastoFamilia> toCacheModel() {
		LineaGastoFamiliaCacheModel lineaGastoFamiliaCacheModel = new LineaGastoFamiliaCacheModel();

		lineaGastoFamiliaCacheModel.familiaId = getFamiliaId();

		lineaGastoFamiliaCacheModel.companyId = getCompanyId();

		lineaGastoFamiliaCacheModel.name = getName();

		String name = lineaGastoFamiliaCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			lineaGastoFamiliaCacheModel.name = null;
		}

		lineaGastoFamiliaCacheModel.description = getDescription();

		String description = lineaGastoFamiliaCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			lineaGastoFamiliaCacheModel.description = null;
		}

		return lineaGastoFamiliaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{familiaId=");
		sb.append(getFamiliaId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("es.davinciti.liferay.model.LineaGastoFamilia");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>familiaId</column-name><column-value><![CDATA[");
		sb.append(getFamiliaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LineaGastoFamilia.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LineaGastoFamilia.class
		};
	private long _familiaId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private String _name;
	private String _description;
	private long _columnBitmask;
	private LineaGastoFamilia _escapedModel;
}