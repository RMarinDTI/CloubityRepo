/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.davinciti.liferay.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import es.davinciti.liferay.model.DiasVacaciones;
import es.davinciti.liferay.model.DiasVacacionesModel;
import es.davinciti.liferay.model.DiasVacacionesSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DiasVacaciones service. Represents a row in the &quot;CMES_DiasVacaciones&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link es.davinciti.liferay.model.DiasVacacionesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DiasVacacionesImpl}.
 * </p>
 *
 * @author Cmes
 * @see DiasVacacionesImpl
 * @see es.davinciti.liferay.model.DiasVacaciones
 * @see es.davinciti.liferay.model.DiasVacacionesModel
 * @generated
 */
@JSON(strict = true)
public class DiasVacacionesModelImpl extends BaseModelImpl<DiasVacaciones>
	implements DiasVacacionesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dias vacaciones model instance should use the {@link es.davinciti.liferay.model.DiasVacaciones} interface instead.
	 */
	public static final String TABLE_NAME = "CMES_DiasVacaciones";
	public static final Object[][] TABLE_COLUMNS = {
			{ "diasVacacionesId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "year", Types.INTEGER },
			{ "disponibles", Types.INTEGER },
			{ "solicitados", Types.INTEGER },
			{ "aprobados", Types.INTEGER },
			{ "pendientes", Types.INTEGER },
			{ "asignado", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table CMES_DiasVacaciones (diasVacacionesId LONG not null primary key,companyId LONG,userId LONG,year INTEGER,disponibles INTEGER,solicitados INTEGER,aprobados INTEGER,pendientes INTEGER,asignado VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CMES_DiasVacaciones";
	public static final String ORDER_BY_JPQL = " ORDER BY diasVacaciones.diasVacacionesId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CMES_DiasVacaciones.diasVacacionesId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.es.davinciti.liferay.model.DiasVacaciones"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.es.davinciti.liferay.model.DiasVacaciones"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.es.davinciti.liferay.model.DiasVacaciones"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long USERID_COLUMN_BITMASK = 2L;
	public static long YEAR_COLUMN_BITMASK = 4L;
	public static long DIASVACACIONESID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DiasVacaciones toModel(DiasVacacionesSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DiasVacaciones model = new DiasVacacionesImpl();

		model.setDiasVacacionesId(soapModel.getDiasVacacionesId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setYear(soapModel.getYear());
		model.setDisponibles(soapModel.getDisponibles());
		model.setSolicitados(soapModel.getSolicitados());
		model.setAprobados(soapModel.getAprobados());
		model.setPendientes(soapModel.getPendientes());
		model.setAsignado(soapModel.getAsignado());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DiasVacaciones> toModels(DiasVacacionesSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DiasVacaciones> models = new ArrayList<DiasVacaciones>(soapModels.length);

		for (DiasVacacionesSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.es.davinciti.liferay.model.DiasVacaciones"));

	public DiasVacacionesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _diasVacacionesId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDiasVacacionesId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _diasVacacionesId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DiasVacaciones.class;
	}

	@Override
	public String getModelClassName() {
		return DiasVacaciones.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("diasVacacionesId", getDiasVacacionesId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("year", getYear());
		attributes.put("disponibles", getDisponibles());
		attributes.put("solicitados", getSolicitados());
		attributes.put("aprobados", getAprobados());
		attributes.put("pendientes", getPendientes());
		attributes.put("asignado", getAsignado());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long diasVacacionesId = (Long)attributes.get("diasVacacionesId");

		if (diasVacacionesId != null) {
			setDiasVacacionesId(diasVacacionesId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Integer year = (Integer)attributes.get("year");

		if (year != null) {
			setYear(year);
		}

		Integer disponibles = (Integer)attributes.get("disponibles");

		if (disponibles != null) {
			setDisponibles(disponibles);
		}

		Integer solicitados = (Integer)attributes.get("solicitados");

		if (solicitados != null) {
			setSolicitados(solicitados);
		}

		Integer aprobados = (Integer)attributes.get("aprobados");

		if (aprobados != null) {
			setAprobados(aprobados);
		}

		Integer pendientes = (Integer)attributes.get("pendientes");

		if (pendientes != null) {
			setPendientes(pendientes);
		}

		String asignado = (String)attributes.get("asignado");

		if (asignado != null) {
			setAsignado(asignado);
		}
	}

	@JSON
	@Override
	public long getDiasVacacionesId() {
		return _diasVacacionesId;
	}

	@Override
	public void setDiasVacacionesId(long diasVacacionesId) {
		_diasVacacionesId = diasVacacionesId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public int getYear() {
		return _year;
	}

	@Override
	public void setYear(int year) {
		_columnBitmask |= YEAR_COLUMN_BITMASK;

		if (!_setOriginalYear) {
			_setOriginalYear = true;

			_originalYear = _year;
		}

		_year = year;
	}

	public int getOriginalYear() {
		return _originalYear;
	}

	@JSON
	@Override
	public int getDisponibles() {
		return _disponibles;
	}

	@Override
	public void setDisponibles(int disponibles) {
		_disponibles = disponibles;
	}

	@JSON
	@Override
	public int getSolicitados() {
		return _solicitados;
	}

	@Override
	public void setSolicitados(int solicitados) {
		_solicitados = solicitados;
	}

	@JSON
	@Override
	public int getAprobados() {
		return _aprobados;
	}

	@Override
	public void setAprobados(int aprobados) {
		_aprobados = aprobados;
	}

	@JSON
	@Override
	public int getPendientes() {
		return _pendientes;
	}

	@Override
	public void setPendientes(int pendientes) {
		_pendientes = pendientes;
	}

	@JSON
	@Override
	public String getAsignado() {
		if (_asignado == null) {
			return StringPool.BLANK;
		}
		else {
			return _asignado;
		}
	}

	@Override
	public void setAsignado(String asignado) {
		_asignado = asignado;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DiasVacaciones.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DiasVacaciones toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DiasVacaciones)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DiasVacacionesImpl diasVacacionesImpl = new DiasVacacionesImpl();

		diasVacacionesImpl.setDiasVacacionesId(getDiasVacacionesId());
		diasVacacionesImpl.setCompanyId(getCompanyId());
		diasVacacionesImpl.setUserId(getUserId());
		diasVacacionesImpl.setYear(getYear());
		diasVacacionesImpl.setDisponibles(getDisponibles());
		diasVacacionesImpl.setSolicitados(getSolicitados());
		diasVacacionesImpl.setAprobados(getAprobados());
		diasVacacionesImpl.setPendientes(getPendientes());
		diasVacacionesImpl.setAsignado(getAsignado());

		diasVacacionesImpl.resetOriginalValues();

		return diasVacacionesImpl;
	}

	@Override
	public int compareTo(DiasVacaciones diasVacaciones) {
		long primaryKey = diasVacaciones.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DiasVacaciones)) {
			return false;
		}

		DiasVacaciones diasVacaciones = (DiasVacaciones)obj;

		long primaryKey = diasVacaciones.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DiasVacacionesModelImpl diasVacacionesModelImpl = this;

		diasVacacionesModelImpl._originalCompanyId = diasVacacionesModelImpl._companyId;

		diasVacacionesModelImpl._setOriginalCompanyId = false;

		diasVacacionesModelImpl._originalUserId = diasVacacionesModelImpl._userId;

		diasVacacionesModelImpl._setOriginalUserId = false;

		diasVacacionesModelImpl._originalYear = diasVacacionesModelImpl._year;

		diasVacacionesModelImpl._setOriginalYear = false;

		diasVacacionesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DiasVacaciones> toCacheModel() {
		DiasVacacionesCacheModel diasVacacionesCacheModel = new DiasVacacionesCacheModel();

		diasVacacionesCacheModel.diasVacacionesId = getDiasVacacionesId();

		diasVacacionesCacheModel.companyId = getCompanyId();

		diasVacacionesCacheModel.userId = getUserId();

		diasVacacionesCacheModel.year = getYear();

		diasVacacionesCacheModel.disponibles = getDisponibles();

		diasVacacionesCacheModel.solicitados = getSolicitados();

		diasVacacionesCacheModel.aprobados = getAprobados();

		diasVacacionesCacheModel.pendientes = getPendientes();

		diasVacacionesCacheModel.asignado = getAsignado();

		String asignado = diasVacacionesCacheModel.asignado;

		if ((asignado != null) && (asignado.length() == 0)) {
			diasVacacionesCacheModel.asignado = null;
		}

		return diasVacacionesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{diasVacacionesId=");
		sb.append(getDiasVacacionesId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", year=");
		sb.append(getYear());
		sb.append(", disponibles=");
		sb.append(getDisponibles());
		sb.append(", solicitados=");
		sb.append(getSolicitados());
		sb.append(", aprobados=");
		sb.append(getAprobados());
		sb.append(", pendientes=");
		sb.append(getPendientes());
		sb.append(", asignado=");
		sb.append(getAsignado());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("es.davinciti.liferay.model.DiasVacaciones");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>diasVacacionesId</column-name><column-value><![CDATA[");
		sb.append(getDiasVacacionesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>year</column-name><column-value><![CDATA[");
		sb.append(getYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>disponibles</column-name><column-value><![CDATA[");
		sb.append(getDisponibles());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>solicitados</column-name><column-value><![CDATA[");
		sb.append(getSolicitados());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>aprobados</column-name><column-value><![CDATA[");
		sb.append(getAprobados());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pendientes</column-name><column-value><![CDATA[");
		sb.append(getPendientes());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>asignado</column-name><column-value><![CDATA[");
		sb.append(getAsignado());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DiasVacaciones.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DiasVacaciones.class
		};
	private long _diasVacacionesId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private int _year;
	private int _originalYear;
	private boolean _setOriginalYear;
	private int _disponibles;
	private int _solicitados;
	private int _aprobados;
	private int _pendientes;
	private String _asignado;
	private long _columnBitmask;
	private DiasVacaciones _escapedModel;
}