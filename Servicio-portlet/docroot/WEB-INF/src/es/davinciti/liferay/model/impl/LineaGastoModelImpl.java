/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.davinciti.liferay.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import es.davinciti.liferay.model.LineaGasto;
import es.davinciti.liferay.model.LineaGastoModel;
import es.davinciti.liferay.model.LineaGastoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LineaGasto service. Represents a row in the &quot;CMES_LineaGasto&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link es.davinciti.liferay.model.LineaGastoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LineaGastoImpl}.
 * </p>
 *
 * @author Cmes
 * @see LineaGastoImpl
 * @see es.davinciti.liferay.model.LineaGasto
 * @see es.davinciti.liferay.model.LineaGastoModel
 * @generated
 */
@JSON(strict = true)
public class LineaGastoModelImpl extends BaseModelImpl<LineaGasto>
	implements LineaGastoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a linea gasto model instance should use the {@link es.davinciti.liferay.model.LineaGasto} interface instead.
	 */
	public static final String TABLE_NAME = "CMES_LineaGasto";
	public static final Object[][] TABLE_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "date_", Types.VARCHAR },
			{ "amount", Types.VARCHAR },
			{ "documentId", Types.VARCHAR },
			{ "comments", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "price", Types.VARCHAR },
			{ "quantity", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table CMES_LineaGasto (lineagastoId LONG not null primary key,date_ VARCHAR(75) null,amount VARCHAR(75) null,documentId VARCHAR(75) null,comments VARCHAR(75) null,status VARCHAR(75) null,price VARCHAR(75) null,quantity VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CMES_LineaGasto";
	public static final String ORDER_BY_JPQL = " ORDER BY lineaGasto.lineagastoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CMES_LineaGasto.lineagastoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.es.davinciti.liferay.model.LineaGasto"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.es.davinciti.liferay.model.LineaGasto"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.es.davinciti.liferay.model.LineaGasto"),
			true);
	public static long DATE_COLUMN_BITMASK = 1L;
	public static long LINEAGASTOID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LineaGasto toModel(LineaGastoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LineaGasto model = new LineaGastoImpl();

		model.setLineagastoId(soapModel.getLineagastoId());
		model.setDate(soapModel.getDate());
		model.setAmount(soapModel.getAmount());
		model.setDocumentId(soapModel.getDocumentId());
		model.setComments(soapModel.getComments());
		model.setStatus(soapModel.getStatus());
		model.setPrice(soapModel.getPrice());
		model.setQuantity(soapModel.getQuantity());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LineaGasto> toModels(LineaGastoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LineaGasto> models = new ArrayList<LineaGasto>(soapModels.length);

		for (LineaGastoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_CMES_NOTAS_LINEAS_NAME = "CMES_Notas_Lineas";
	public static final Object[][] MAPPING_TABLE_CMES_NOTAS_LINEAS_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "notagastoId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_NOTAS_LINEAS_SQL_CREATE = "create table CMES_Notas_Lineas (lineagastoId LONG not null,notagastoId LONG not null,primary key (lineagastoId, notagastoId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_NOTAS_LINEAS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Notas_Lineas"), true);
	public static final String MAPPING_TABLE_CMES_LINEAS_PAYMODES_NAME = "CMES_Lineas_PayModes";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_PAYMODES_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "paymodeId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_PAYMODES_SQL_CREATE = "create table CMES_Lineas_PayModes (lineagastoId LONG not null,paymodeId LONG not null,primary key (lineagastoId, paymodeId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_PAYMODES = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_PayModes"), true);
	public static final String MAPPING_TABLE_CMES_LINEAS_CURRENCIES_NAME = "CMES_Lineas_Currencies";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_CURRENCIES_COLUMNS = {
			{ "currencyId", Types.BIGINT },
			{ "lineagastoId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_CURRENCIES_SQL_CREATE = "create table CMES_Lineas_Currencies (currencyId LONG not null,lineagastoId LONG not null,primary key (currencyId, lineagastoId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_CURRENCIES = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_Currencies"),
			true);
	public static final String MAPPING_TABLE_CMES_LINEAS_FAMILIAS_NAME = "CMES_Lineas_Familias";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_FAMILIAS_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "familiaId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_FAMILIAS_SQL_CREATE = "create table CMES_Lineas_Familias (lineagastoId LONG not null,familiaId LONG not null,primary key (lineagastoId, familiaId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_FAMILIAS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_Familias"), true);
	public static final String MAPPING_TABLE_CMES_LINEAS_CATEGORIAS_NAME = "CMES_Lineas_Categorias";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_CATEGORIAS_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "categoriaId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_CATEGORIAS_SQL_CREATE = "create table CMES_Lineas_Categorias (lineagastoId LONG not null,categoriaId LONG not null,primary key (lineagastoId, categoriaId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_CATEGORIAS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_Categorias"),
			true);
	public static final String MAPPING_TABLE_CMES_LINEAS_CLIENTES_NAME = "CMES_Lineas_Clientes";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_CLIENTES_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "clienteId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_CLIENTES_SQL_CREATE = "create table CMES_Lineas_Clientes (lineagastoId LONG not null,clienteId LONG not null,primary key (lineagastoId, clienteId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_CLIENTES = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_Clientes"), true);
	public static final String MAPPING_TABLE_CMES_LINEAS_PROYECTOS_NAME = "CMES_Lineas_Proyectos";
	public static final Object[][] MAPPING_TABLE_CMES_LINEAS_PROYECTOS_COLUMNS = {
			{ "lineagastoId", Types.BIGINT },
			{ "proyectoId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_CMES_LINEAS_PROYECTOS_SQL_CREATE = "create table CMES_Lineas_Proyectos (lineagastoId LONG not null,proyectoId LONG not null,primary key (lineagastoId, proyectoId))";
	public static final boolean FINDER_CACHE_ENABLED_CMES_LINEAS_PROYECTOS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.CMES_Lineas_Proyectos"), true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.es.davinciti.liferay.model.LineaGasto"));

	public LineaGastoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _lineagastoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLineagastoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _lineagastoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LineaGasto.class;
	}

	@Override
	public String getModelClassName() {
		return LineaGasto.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("lineagastoId", getLineagastoId());
		attributes.put("date", getDate());
		attributes.put("amount", getAmount());
		attributes.put("documentId", getDocumentId());
		attributes.put("comments", getComments());
		attributes.put("status", getStatus());
		attributes.put("price", getPrice());
		attributes.put("quantity", getQuantity());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long lineagastoId = (Long)attributes.get("lineagastoId");

		if (lineagastoId != null) {
			setLineagastoId(lineagastoId);
		}

		String date = (String)attributes.get("date");

		if (date != null) {
			setDate(date);
		}

		String amount = (String)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		String documentId = (String)attributes.get("documentId");

		if (documentId != null) {
			setDocumentId(documentId);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String price = (String)attributes.get("price");

		if (price != null) {
			setPrice(price);
		}

		String quantity = (String)attributes.get("quantity");

		if (quantity != null) {
			setQuantity(quantity);
		}
	}

	@JSON
	@Override
	public long getLineagastoId() {
		return _lineagastoId;
	}

	@Override
	public void setLineagastoId(long lineagastoId) {
		_lineagastoId = lineagastoId;
	}

	@JSON
	@Override
	public String getDate() {
		if (_date == null) {
			return StringPool.BLANK;
		}
		else {
			return _date;
		}
	}

	@Override
	public void setDate(String date) {
		_columnBitmask |= DATE_COLUMN_BITMASK;

		if (_originalDate == null) {
			_originalDate = _date;
		}

		_date = date;
	}

	public String getOriginalDate() {
		return GetterUtil.getString(_originalDate);
	}

	@JSON
	@Override
	public String getAmount() {
		if (_amount == null) {
			return StringPool.BLANK;
		}
		else {
			return _amount;
		}
	}

	@Override
	public void setAmount(String amount) {
		_amount = amount;
	}

	@JSON
	@Override
	public String getDocumentId() {
		if (_documentId == null) {
			return StringPool.BLANK;
		}
		else {
			return _documentId;
		}
	}

	@Override
	public void setDocumentId(String documentId) {
		_documentId = documentId;
	}

	@JSON
	@Override
	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@JSON
	@Override
	public String getPrice() {
		if (_price == null) {
			return StringPool.BLANK;
		}
		else {
			return _price;
		}
	}

	@Override
	public void setPrice(String price) {
		_price = price;
	}

	@JSON
	@Override
	public String getQuantity() {
		if (_quantity == null) {
			return StringPool.BLANK;
		}
		else {
			return _quantity;
		}
	}

	@Override
	public void setQuantity(String quantity) {
		_quantity = quantity;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LineaGasto.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LineaGasto toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LineaGasto)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LineaGastoImpl lineaGastoImpl = new LineaGastoImpl();

		lineaGastoImpl.setLineagastoId(getLineagastoId());
		lineaGastoImpl.setDate(getDate());
		lineaGastoImpl.setAmount(getAmount());
		lineaGastoImpl.setDocumentId(getDocumentId());
		lineaGastoImpl.setComments(getComments());
		lineaGastoImpl.setStatus(getStatus());
		lineaGastoImpl.setPrice(getPrice());
		lineaGastoImpl.setQuantity(getQuantity());

		lineaGastoImpl.resetOriginalValues();

		return lineaGastoImpl;
	}

	@Override
	public int compareTo(LineaGasto lineaGasto) {
		long primaryKey = lineaGasto.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LineaGasto)) {
			return false;
		}

		LineaGasto lineaGasto = (LineaGasto)obj;

		long primaryKey = lineaGasto.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LineaGastoModelImpl lineaGastoModelImpl = this;

		lineaGastoModelImpl._originalDate = lineaGastoModelImpl._date;

		lineaGastoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LineaGasto> toCacheModel() {
		LineaGastoCacheModel lineaGastoCacheModel = new LineaGastoCacheModel();

		lineaGastoCacheModel.lineagastoId = getLineagastoId();

		lineaGastoCacheModel.date = getDate();

		String date = lineaGastoCacheModel.date;

		if ((date != null) && (date.length() == 0)) {
			lineaGastoCacheModel.date = null;
		}

		lineaGastoCacheModel.amount = getAmount();

		String amount = lineaGastoCacheModel.amount;

		if ((amount != null) && (amount.length() == 0)) {
			lineaGastoCacheModel.amount = null;
		}

		lineaGastoCacheModel.documentId = getDocumentId();

		String documentId = lineaGastoCacheModel.documentId;

		if ((documentId != null) && (documentId.length() == 0)) {
			lineaGastoCacheModel.documentId = null;
		}

		lineaGastoCacheModel.comments = getComments();

		String comments = lineaGastoCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			lineaGastoCacheModel.comments = null;
		}

		lineaGastoCacheModel.status = getStatus();

		String status = lineaGastoCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			lineaGastoCacheModel.status = null;
		}

		lineaGastoCacheModel.price = getPrice();

		String price = lineaGastoCacheModel.price;

		if ((price != null) && (price.length() == 0)) {
			lineaGastoCacheModel.price = null;
		}

		lineaGastoCacheModel.quantity = getQuantity();

		String quantity = lineaGastoCacheModel.quantity;

		if ((quantity != null) && (quantity.length() == 0)) {
			lineaGastoCacheModel.quantity = null;
		}

		return lineaGastoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{lineagastoId=");
		sb.append(getLineagastoId());
		sb.append(", date=");
		sb.append(getDate());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", documentId=");
		sb.append(getDocumentId());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", price=");
		sb.append(getPrice());
		sb.append(", quantity=");
		sb.append(getQuantity());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("es.davinciti.liferay.model.LineaGasto");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>lineagastoId</column-name><column-value><![CDATA[");
		sb.append(getLineagastoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>date</column-name><column-value><![CDATA[");
		sb.append(getDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentId</column-name><column-value><![CDATA[");
		sb.append(getDocumentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>price</column-name><column-value><![CDATA[");
		sb.append(getPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quantity</column-name><column-value><![CDATA[");
		sb.append(getQuantity());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LineaGasto.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LineaGasto.class
		};
	private long _lineagastoId;
	private String _date;
	private String _originalDate;
	private String _amount;
	private String _documentId;
	private String _comments;
	private String _status;
	private String _price;
	private String _quantity;
	private long _columnBitmask;
	private LineaGasto _escapedModel;
}